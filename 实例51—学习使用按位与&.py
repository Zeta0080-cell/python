"""
在Python中，按位与（&）运算符是一种二进制运算符，它对两个数的二进制表示进行逐位比较，并根据比较结果生成一个新的二进制数。具体来说，对于两个数的每一位，只有当两个数的相应位都是1时，结果位才是1；否则，结果位就是0。

基本规则
按位与运算符的基本规则如下：

如果两个相应的位都是1，则结果位是1。
如果两个相应的位中至少有一个是0，则结果位是0。
示例
让我们通过一些例子来更好地理解按位与运算符：

python
# 假设有两个二进制数 1011 (十进制中的11) 和 1100 (十进制中的12)
a = 11  # 二进制表示为 1011
b = 12  # 二进制表示为 1100

# 执行按位与操作
result = a & b  # 结果是 1000 (十进制中的8)
print(bin(result))  # 输出 '0b1000'，表示二进制的1000
在这个例子中，我们可以看到：

a的二进制表示为1011。
b的二进制表示为1100。
进行按位与操作后，我们得到的结果是1000，因为只有从右边数起的第四位（a和b都是1）满足按位与的条件。
"""

# 假设有两个二进制数 1011 (十进制中的11) 和 1100 (十进制中的12)
a = 11  # 二进制表示为 1011
b = 12  # 二进制表示为 1100

# 执行按位与操作
result = a & b  # 结果是 1000 (十进制中的8)
print(bin(result))  # 输出 '0b1000'，表示二进制的1000